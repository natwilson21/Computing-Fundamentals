Assingment Specification:
Recreate the classic race of the tortoise and the hare. Use a random number generation to develop a simulation of this 
memorable event. The contenders begin the race at square 1 of 75 squares. Each square represents a position
along the race course. The finish line is at square 75. The first contender to reach or pass square
75 is rewarded with a pail of fresh carrots and lettuce. The race course weaves its way up the
side of a slippery mountain, so occasionally the contenders lose ground. A clock ticks once per second. With each tick of
the clock, your application should adjust the position of the animals according to the rules in the table below. 
Use variables to keep track of the positions of the animals (i.e., position numbers are 1–75). 
Start each animal at position 1 (the “starting gate”). If an animal slips left before square 1, move it back to square 1.
Create two functions tortoiseProb and hareProb that generate the percentages in the table
for the tortoise and the hare, respectively, by producing a random integer i in the range 1 ≤
i ≤ 10. In the tortoiseProb function for the tortoise, perform a “fast plod” when 1 ≤ i ≤ 5,
a “slip” when 6 ≤ i ≤ 7, or a “slow plod” when 8 ≤ i ≤ 10. Use a similar technique in the
function for the hare. 
-----------------------------------------------------------------------------
Animal    | Move Type | Percentage of Times| Actual Move
-----------------------------------------------------------------------------
Tortoise  | Fast Plod | 50%                | 3 Squares to the right
          | Slip      | 20%                | 6 Squares to the left
          | Slow Plod | 30%                | 1 Square to the right
-----------------------------------------------------------------------------
Hare      | Sleep     | 20%                | No move at all
          | Big Hop   | 20%                | 9 Squares to the right
          | Big Slip  | 10%                | 12 Squares to the left
          | Small Hop | 30%                | 1 Square to the right 
          | Small Slip| 20%                | 2 Squares to the left
-----------------------------------------------------------------------------

Begin the race by displaying
BANG! AND THEY'RE OFF!!!!!
Then, for each tick of the clock (i.e., each iteration of a loop), display a 75-position line showing
the letter “T” in the position of the tortoise, the letter “H” in the position of the hare, and the
character “-“ everywhere else. Occasionally, the contenders will land on the same square. In
this case, the tortoise bites the hare, and your application should display “OUCH!!!” at that
position. All positions other than the “T", the “H”, or the “OUCH!!!” (in case of a tie) should
be blank and denoted by “-“.
After each line is displayed, test for whether either animal has reached or passed square 75.
If so, display the winner and terminate the simulation. If the tortoise wins, display
“TORTOISE WINS!!! YAY!!!” If the hare wins, display “Hare wins. Yuch!” If both animals win
on the same tick of the clock, display “It’s a tie”. If neither animal wins, perform the loop
again to simulate the next tick of the clock.
Repeat this game 10 times and tabulate how many times each animal has won.
